pluginManagement {
	repositories {
		gradlePluginPortal()
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net'
		}
		maven {
			name = 'NeoForge'
			url = 'https://maven.neoforged.net/releases'
		}
		mavenCentral()
	}
}

plugins {
	id 'org.gradle.toolchains.foojay-resolver-convention' version '0.8.0'
	id 'net.neoforged.moddev.repositories' version '2.0.34-beta'
}

rootProject.name = 'Arcanus'
include 'Common', 'Fabric', 'NeoForge'

dependencyResolutionManagement {
	repositories {
		mavenCentral()
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net'
		}
		maven {
			name = 'NeoForge'
			url = 'https://maven.neoforged.net/releases'
		}
		maven {
			name = "Sponge"
			url = "https://repo.spongepowered.org/repository/maven-public"
			content {
				includeGroupAndSubgroups "org.spongepowered"
			}
		}
		maven {
			name = "ParchmentMC"
			url = "https://maven.parchmentmc.org"
			content {
				includeGroupAndSubgroups "org.parchmentmc"
			}
		}
		maven {
			name = "Up-Mods"
			url = "https://maven.uuid.gg/releases"
		}
		maven {
			name = "TeamResourceful"
			url = "https://maven.teamresourceful.com/repository/maven-releases"
		}
		maven {
			name "TerraformersMC"
			url "https://maven.terraformersmc.com/releases"
		}
		maven {
			name "Modrinth"
			url "https://api.modrinth.com/maven"
			content {
				includeGroup "maven.modrinth"
			}
		}
		maven {
			name = "CurseMaven"
			url = "https://www.cursemaven.com"
			content {
				includeGroup "curse.maven"
			}
		}
	}

	versionCatalogs {
		libs {
			from(files("Common/libs.versions.toml"))
		}
		fabric {
			from(files("Fabric/libs.versions.toml"))
		}
		neoforge {
			from(files("NeoForge/libs.versions.toml"))
		}
	}
}

def ENV = System.getenv()

buildCache {
	remote(HttpBuildCache) {
		url = "https://ci-cache.uuid.gg/cache"
		if (ENV.CI && ENV.GRADLE_BUILD_CACHE_USER && ENV.GRADLE_BUILD_CACHE_TOKEN) {
			push = true
			credentials {
				username = ENV.GRADLE_BUILD_CACHE_USER
				password = ENV.GRADLE_BUILD_CACHE_TOKEN
			}
		}
	}
}
